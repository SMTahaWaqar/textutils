{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","aria-checked","htmlfor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","rows","backgroundColor","value","onChange","event","target","newText","showAlert","document","querySelector","select","execCommand","split","length","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.23a960f2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase()\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n  }\r\n\r\n  return (\r\n    props.alert && <div\r\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n      role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n            </form> */}\r\n            <div className={`form-check form-switch  text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" aria-checked=\"false\"/>\r\n              <label className=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string.isRequired, aboutText: PropTypes.string };\r\n\r\nNavbar.defaultProps = {title: \"Set Title Here\", aboutText: \"About\"}","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        // console.log('Upper case was clicked' + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Conveted To UPPERCASE\",\"success\")\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase\",\"success\")\r\n    }\r\n\r\n    const handleClrClick = () => {\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared\",\"success\")\r\n    }\r\n  \r\n    const handleOnChange = (event) => {\r\n        // console.log('Handle on change')\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = (event) => {\r\n      document.querySelector(\"textarea\").select();\r\n      document.execCommand('copy');\r\n      props.showAlert(\"Text Copied\",\"success\")\r\n  }\r\n\r\n\r\n  const [text, setText] = useState(\"\");\r\n//   text = \"taha\" // Wrong way to chaange the state\r\n//   setText(\"taha\") //correct way to change the state\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode===\"light\"?\"black\":\"white\"}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" id=\"myBox\" rows=\"10\" style={{backgroundColor: props.mode===\"light\"?\"white\":\"#16213E\", color: props.mode===\"light\"?\"black\":\"white\"}} value={text} onChange={handleOnChange}></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>UPPERCASE</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>lowercase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleClrClick}>Clear Text</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode===\"light\"?\"black\":\"white\"}}>\r\n        <h1>Your text summary</h1>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p></p>\r\n        <p>{0.008*(text.split(\" \").length)} minutes taked to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something to preview here\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import { Routes ,Route } from 'react-router-dom';\n// import {\n//   BrowserRouter as Router,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whether dark is enabled\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout (() => {\n      setAlert(null)\n    }, 1500)\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#16213E\";\n      // document.title = \"TextUtils | Dark Mode\"\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      // document.title = \"TextUtils | Light Mode\"\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Navbar  title=\"Using Props\" aboutText=\"About this website\"/> */}\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About/>}/> */}\n          {/* <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\"mode={mode}/>} /> */}\n        {/* </Routes> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\"mode={mode}/>\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}